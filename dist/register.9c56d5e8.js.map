{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,uCCKC,MAAKC,EAAiBC,SAASC,eAAe,kBACzCC,EAAgBF,SAASC,eAAe,iBACxCE,EAAYH,SAASC,eAAe,aACpCG,EAAeJ,SAASC,eAAe,gBAG7CI,eAAeC,OAAO,SAAU,CAC5BC,MAAO,IACPC,SAAU,KACVC,OAAQ,SACRC,SAAU,UAGXR,GACCA,EAAcS,iBAAiB,SAASC,MAAMC,IAC1CA,EAAEC,iBAEF,MAAMC,EAAOhB,EAAegB,KAAKC,MAC3BC,EAAWlB,EAAekB,SAASD,MACnCE,EAAQnB,EAAemB,MAAMF,MAC7BG,EAAWpB,EAAeoB,SAASH,MACnCI,EAAkBrB,EAAeqB,gBAAgBJ,MACjDK,EAAU,CA3BxBN,KA4BYA,EA5BZE,SA6BYA,EA7BZC,MA8BYA,EA9BZC,SA+BYA,EACAG,SAAU,GAEd,GAAY,KAATP,GAA4B,KAAbE,GAA6B,KAAVC,GAA6B,KAAbC,GAAuC,KAApBC,GAA0BD,GAAYC,EAAgB,CAC1H,MAAMG,QDZlBX,eAA0BY,GAvB1BN,MAuBkCA,EAvBlCC,SAuByCA,IACrC,IACI,MAzBRM,KAyBgBA,SAAe5B,EAAA6B,+BAA+BF,EAAMN,EAAOC,GAGnE,OAFAQ,QAAQC,IAAIH,GAELA,EACV,MAAMZ,GACW,uBAAXA,EAAEgB,MACDC,MAAM,kDAGI,8BAAXjB,EAAEgB,MACDC,MAAM,uCCAoBC,CAAWC,EAAAR,KAAMH,SDKvDT,eAAiCqB,EAAIC,EAAQC,GACzC,UACUC,EAAAC,OAAOD,EAAAE,IAAIL,EAAI,QAASC,GAASC,GAE1C,MAAMtB,GACHc,QAAQC,IAAIf,ICTF0B,CAAkBP,EAAAC,GAAIV,EAAYiB,IAAKnB,GAE7CS,MAAM,oBAAkBf,yBACtBY,QAAMC,IAAI,gBACZD,QAAQC,IAAIL,GAEZxB,EAAegB,KAAKC,MAAQ,GAC5BjB,EAAekB,SAASD,MAAQ,GAChCjB,EAAemB,MAAMF,MAAQ,GAC7BjB,EAAeoB,SAASH,MAAQ,GAChCjB,EAAeqB,gBAAgBJ,MAAQ,GAGvCG,IAAaC,GACbU,MAAM,mCAKf1B,GACCA,EAAaO,iBAAiB,SAASC,MAAOC,IAC1CA,EAAEC,iBAEFa,QAAQC,IAAI,SACZ,MAAMV,EAAQf,EAAUe,MAAMF,MACxBG,EAAWhB,EAAUgB,SAASH,MAC9BS,QDzDbb,eAAqBY,EAAMS,EAAIf,EAAOC,GACnC,IACI,MAPRM,KAOgBA,SAAe5B,EAAA4C,2BAA2BjB,EAAMN,EAAOC,GAC/DW,MAAM,uBAAuBL,EAAKP,SAElC,MAAMwB,EAASN,EAAAE,IAAIL,EAAI,QAASR,EAAKe,KAGrC,aAFsBJ,EAAAO,OAAOD,IACRE,OAGxB,MAAM/B,GACHc,QAAQC,IAAIf,GACZiB,MAAM,oCC6Cae,CAAMb,EAAAR,KAAMQ,EAAAC,GAAIf,EAAOC,GAC1CQ,QAAQC,IAAIH,GAETA,EAAKH,QACJwB,SAASC,KAAO,mBAEhBD,SAASC,KAAO","sources":["logic/auth.js","logic/app.js"],"sourcesContent":["import { createUserWithEmailAndPassword, signInWithEmailAndPassword } from \"firebase/auth\";\r\nimport { doc, setDoc, getDoc } from \"firebase/firestore\";\r\n\r\n\r\n//Función login\r\nasync function login (auth, db, email, password){\r\n    try{\r\n        const { user } = await signInWithEmailAndPassword(auth, email, password);\r\n        alert(`Bienvenido, usuario ${user.email}`);\r\n\r\n        const docRef = doc(db, \"users\", user.uid);\r\n        const docSnap = await getDoc(docRef);\r\n        const data = docSnap.data();\r\n        return data;\r\n\r\n    }catch(e){\r\n        console.log(e);\r\n        alert(\"Correo o contraseña inválida :(\");\r\n    }\r\n}\r\n\r\n//---------------------------------\r\n//Funcion registrar usuarios\r\nasync function createUser(auth, { email, password}){\r\n    try{\r\n        const { user } = await createUserWithEmailAndPassword(auth, email, password);\r\n        console.log(user);\r\n        \r\n        return user;\r\n    }catch(e){\r\n        if(e.code === \"auth/weak-password\") {\r\n            alert(\"Tu contraseña debe tener al menos 6 caracteres\");\r\n        }\r\n    \r\n        if(e.code === \"auth/email-already-in-use\") {\r\n            alert(\"Este correo ya se encuentra en uso\");\r\n        }\r\n    }\r\n}\r\n\r\nasync function addUserToDatabase(db, userId, userInfo){\r\n    try{\r\n        await setDoc(doc(db, \"users\", userId), userInfo);\r\n\r\n    }catch(e){\r\n        console.log(e);\r\n    }\r\n}\r\n\r\nexport{\r\n    login,\r\n    createUser,\r\n    addUserToDatabase\r\n}","// Import the functions you need from the SDKs you need\r\nimport { login, createUser, addUserToDatabase } from \"./auth\";\r\nimport { db, auth} from \"./importFirebase\";\r\n\r\n//Logica para iniciar/registro de sesión\r\nconst createUserForm = document.getElementById(\"createUserForm\");\r\nconst createUserBtn = document.getElementById(\"createUserBtn\");\r\nconst loginForm = document.getElementById(\"loginForm\");\r\nconst loginFormBtn = document.getElementById(\"loginFormBtn\");\r\n\r\n//animacion intro\r\nScrollReveal().reveal('.login', { \r\n    delay: 500,\r\n    duration: 1500,\r\n    origin: 'bottom',\r\n    distance: '-50px',\r\n});\r\n\r\nif(createUserBtn){\r\n    createUserBtn.addEventListener(\"click\", async e =>{\r\n        e.preventDefault();\r\n    \r\n        const name = createUserForm.name.value;\r\n        const lastName = createUserForm.lastName.value;\r\n        const email = createUserForm.email.value;\r\n        const password = createUserForm.password.value;\r\n        const confirmPassword = createUserForm.confirmPassword.value;\r\n        const newUser = {\r\n            name,\r\n            lastName,\r\n            email,\r\n            password,\r\n            isAdmin : false\r\n        }\r\n        if(name !== \"\" && lastName !== \"\" && email !== \"\" && password !== \"\" && confirmPassword !== \"\" && password == confirmPassword){\r\n            const userCreated = await createUser(auth, newUser);\r\n            await addUserToDatabase(db, userCreated.uid, newUser);\r\n        \r\n            alert(`¡Cuenta creada!, ${ name } ahora inicia sesión`);\r\n            console.log(\"creando user\");\r\n            console.log(userCreated);\r\n\r\n            createUserForm.name.value = \"\";\r\n            createUserForm.lastName.value = \"\";\r\n            createUserForm.email.value = \"\"; \r\n            createUserForm.password.value = \"\" ;\r\n            createUserForm.confirmPassword.value = \"\";\r\n\r\n    \r\n        }if(password !== confirmPassword){\r\n            alert(\"Las contraseñas no coinciden\");\r\n        }\r\n    });\r\n}\r\n\r\nif(loginFormBtn){\r\n    loginFormBtn.addEventListener(\"click\", async (e) =>{\r\n        e.preventDefault();\r\n    \r\n        console.log(\"entro\");\r\n        const email = loginForm.email.value;\r\n        const password = loginForm.password.value;\r\n        const user = await login(auth, db, email, password);\r\n        console.log(user);\r\n    \r\n        if(user.isAdmin){\r\n            location.href = \"./adminView.html\"\r\n        }else{\r\n            location.href = \"./shop.html\"\r\n    \r\n        }\r\n    });\r\n}\r\n\r\n\r\n    "],"names":["$1tHc5","parcelRequire","$8570f4573fe12a02$var$createUserForm","document","getElementById","$8570f4573fe12a02$var$createUserBtn","$8570f4573fe12a02$var$loginForm","$8570f4573fe12a02$var$loginFormBtn","ScrollReveal","reveal","delay","duration","origin","distance","addEventListener","async","e","preventDefault","name","value","lastName","email","password","confirmPassword","newUser","isAdmin","userCreated","auth","user","createUserWithEmailAndPassword","console","log","code","alert","$4044f8daaa257e34$export$3493b8991d49f558","$ijjug","db","userId","userInfo","$etBjH","setDoc","doc","$4044f8daaa257e34$export$9f9c8eae0fddfad1","uid","signInWithEmailAndPassword","docRef","getDoc","data","$4044f8daaa257e34$export$596d806903d1f59e","location","href"],"version":3,"file":"register.9c56d5e8.js.map"}